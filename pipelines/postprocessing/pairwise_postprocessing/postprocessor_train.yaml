postfix: "postprocessing"

seed: 42
precision: 16
accelerator: gpu
devices: 2
find_unused_parameters: False


datasets:
  name: oml_reranking_dataset
  args:
    dataset_root: /path/to/dataset/   # <---- specify path to your dataset
    dataframe_name: df.csv
    embeddings_cache_dir: ${datasets.args.dataset_root} # CACHE EMBEDDINGS PRODUCED BY BASELINE FEATURE EXTRACTOR
    cache_size: 0
    batch_size_inference: ${batch_size_inference}
    num_workers: ${num_workers}
    precision: ${precision}
    feature_extractor:
      name: vit
      args:
        normalise_features: True
        use_multi_scale: False
        weights: /path/to/extractor.ckpt  # <---- specify path to baseline feature extractor
        arch: vits16

    transforms_extraction:
      name: norm_resize_hypvit_torch
      args:
        im_size: 224
        crop_size: 224

    transforms_train:
      name: augs_hypvit_torch
      args:
        im_size: 224
        min_scale: 0.8

logs_root: /path/to/logs   # <---- specify path to your logs
logs_folder: ${now:%Y-%m-%d_%H-%M-%S}_${postfix}

num_workers: 20

max_epochs: 1000
valid_period: 10


# TRAIN POSTPROCESSOR

pairwise_model:
  name: concat_siamese
  args:
    mlp_hidden_dims: [192]
    extractor:
      name: vit
      args:
        normalise_features: False
        use_multi_scale: False
        weights: ${extractor_weights}
        arch: vits16

hard_pairs_mining: True

optimizer:
  name: adam
  args:
    lr: 2e-3

freeze_n_epochs: 3
scheduling:
  scheduler_interval: epoch
  scheduler_frequency: 1
  scheduler:
    name: multi_step
    args:
      gamma: 5e-3
      milestones:
        - ${freeze_n_epochs}

sampler:
  name: balance
  args:
    n_labels: 30
    n_instances: 4


# VALIDATE POSTPROCESSOR BY RE-RANKING TOP-N OUTPUTS

batch_size_inference: 128

postprocessor:
  name: pairwise_reranker
  args:
    top_n: 5
    pairwise_model: ${pairwise_model}
    num_workers: ${num_workers}
    batch_size: ${batch_size_inference}
    verbose: True
    use_fp16: True

metric_for_checkpointing: OVERALL/cmc/1
mode_for_checkpointing: max

log_images: False
metric_args:
  metrics_to_exclude_from_visualization: [cmc,]
  cmc_top_k: [1, 10, 20, 30, 100]
  map_top_k: [5, 10]
  fmr_vals: []
  pcf_variance: []
  return_only_overall_category: True
  visualize_only_overall_category: True

logger:
  name: wandb  # requires <WANDB_API_KEY> as global env
  args:
    project: "test_project"

tags:
  - postprocessing

hydra_dir: ${logs_root}/${logs_folder}/

hydra:
  run:
    dir: ${hydra_dir}
  searchpath:
    - pkg://oml.configs
  job:
    chdir: True
